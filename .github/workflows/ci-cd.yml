name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  DOCKER_IMAGE: my-docker-username/my-node-app
  KUBERNETES_DEPLOYMENT: my-node-app-deployment
  KUBERNETES_NAMESPACE: default

jobs:
  # Step 1: Run Tests
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  # Step 2: Build and Push Docker Image
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: shivangsingh
          password: Meandmine123@

      - name: Build Docker image
        run: docker build -t ${{ env.DOCKER_IMAGE }} .

      - name: Push Docker image
        run: docker push ${{ env.DOCKER_IMAGE }}

  # Step 3: Deploy to Kubernetes
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig
          export KUBECONFIG=kubeconfig

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/${{ env.KUBERNETES_DEPLOYMENT }} \
          my-node-app=${{ env.DOCKER_IMAGE }}

      - name: Check deployment status
        run: |
          kubectl rollout status deployment/${{ env.KUBERNETES_DEPLOYMENT }}

  # Step 4: Notifications
  notify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Notify success
        if: success()
        run: echo "Deployment successful!"
      - name: Notify failure
        if: failure()
        run: echo "Deployment failed!"
